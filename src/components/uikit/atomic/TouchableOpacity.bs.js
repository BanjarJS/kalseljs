// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var React = require("react");
var Caml_option = require("bs-platform/lib/js/caml_option.js");
var Row$KalseljsCommunityPage = require("./Row.bs.js");
var View$KalseljsCommunityPage = require("./View.bs.js");

function create(activeOpacity, hoverOpacity) {
  return Css.style(/* :: */[
              Css.active(/* :: */[
                    Css.opacity(activeOpacity),
                    /* :: */[
                      Css.transition(0, undefined, undefined, "opacity"),
                      /* [] */0
                    ]
                  ]),
              /* :: */[
                Css.hover(/* :: */[
                      Css.opacity(hoverOpacity),
                      /* :: */[
                        Css.transition(0, undefined, undefined, "opacity"),
                        /* :: */[
                          Css.cursor(/* pointer */-786317123),
                          /* [] */0
                        ]
                      ]
                    ]),
                /* :: */[
                  Css.zIndex(1),
                  /* [] */0
                ]
              ]
            ]);
}

var Styles = {
  create: create
};

function TouchableOpacity(Props) {
  var onPress = Props.onPress;
  var tabIndex = Props.tabIndex;
  var onBlur = Props.onBlur;
  var match = Props.style;
  var style = match !== undefined ? match : "";
  var match$1 = Props.hoverOpacity;
  var hoverOpacity = match$1 !== undefined ? match$1 : 0.85;
  var match$2 = Props.activeOpacity;
  var activeOpacity = match$2 !== undefined ? match$2 : 0.5;
  var match$3 = Props.containerType;
  var containerType = match$3 !== undefined ? match$3 : /* Column */-81804554;
  var children = Props.children;
  var resolvedStyle = Css.merge(/* :: */[
        create(activeOpacity, hoverOpacity),
        /* :: */[
          style,
          /* [] */0
        ]
      ]);
  if (containerType >= 4102650) {
    var tmp = {
      style: resolvedStyle,
      children: children
    };
    if (onPress !== undefined) {
      tmp.onPress = Caml_option.valFromOption(onPress);
    }
    return React.createElement(Row$KalseljsCommunityPage.make, tmp);
  } else {
    var tmp$1 = {
      style: resolvedStyle,
      children: children
    };
    if (onPress !== undefined) {
      tmp$1.onPress = Caml_option.valFromOption(onPress);
    }
    if (onBlur !== undefined) {
      tmp$1.onBlur = Caml_option.valFromOption(onBlur);
    }
    if (tabIndex !== undefined) {
      tmp$1.tabIndex = Caml_option.valFromOption(tabIndex);
    }
    return React.createElement(View$KalseljsCommunityPage.make, tmp$1);
  }
}

var make = TouchableOpacity;

exports.Styles = Styles;
exports.make = make;
/* Css Not a pure module */
